# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2024-01-29T10:01:25+00:00

from __future__ import annotations

from pydantic import BaseModel, Field


class RequestItem(BaseModel):
    type: str
    query: str


class AstronomyItem(BaseModel):
    sunrise: str
    sunset: str
    moonrise: str
    moonset: str
    moon_phase: str
    moon_illumination: str


class WeatherIconUrlItem(BaseModel):
    value: str


class WeatherDescItem(BaseModel):
    value: str


class HourlyItem(BaseModel):
    time: str
    temp_c: str = Field(..., alias='tempC')
    temp_f: str = Field(..., alias='tempF')
    windspeed_miles: str = Field(..., alias='windspeedMiles')
    windspeed_kmph: str = Field(..., alias='windspeedKmph')
    winddir_degree: str = Field(..., alias='winddirDegree')
    winddir16_point: str = Field(..., alias='winddir16Point')
    weather_code: str = Field(..., alias='weatherCode')
    weather_icon_url: list[WeatherIconUrlItem] = Field(..., alias='weatherIconUrl')
    weather_desc: list[WeatherDescItem] = Field(..., alias='weatherDesc')
    precip_mm: str = Field(..., alias='precipMM')
    precip_inches: str = Field(..., alias='precipInches')
    humidity: str
    visibility: str
    visibility_miles: str = Field(..., alias='visibilityMiles')
    pressure: str
    pressure_inches: str = Field(..., alias='pressureInches')
    cloudcover: str
    heat_index_c: str = Field(..., alias='HeatIndexC')
    heat_index_f: str = Field(..., alias='HeatIndexF')
    dew_point_c: str = Field(..., alias='DewPointC')
    dew_point_f: str = Field(..., alias='DewPointF')
    wind_chill_c: str = Field(..., alias='WindChillC')
    wind_chill_f: str = Field(..., alias='WindChillF')
    wind_gust_miles: str = Field(..., alias='WindGustMiles')
    wind_gust_kmph: str = Field(..., alias='WindGustKmph')
    feels_like_c: str = Field(..., alias='FeelsLikeC')
    feels_like_f: str = Field(..., alias='FeelsLikeF')
    uv_index: str = Field(..., alias='uvIndex')


class WeatherItem(BaseModel):
    date: str
    astronomy: list[AstronomyItem]
    maxtemp_c: str = Field(..., alias='maxtempC')
    maxtemp_f: str = Field(..., alias='maxtempF')
    mintemp_c: str = Field(..., alias='mintempC')
    mintemp_f: str = Field(..., alias='mintempF')
    avgtemp_c: str = Field(..., alias='avgtempC')
    avgtemp_f: str = Field(..., alias='avgtempF')
    total_snow_cm: str = Field(..., alias='totalSnow_cm')
    sun_hour: str = Field(..., alias='sunHour')
    uv_index: str = Field(..., alias='uvIndex')
    hourly: list[HourlyItem]


class Data(BaseModel):
    request: list[RequestItem]
    weather: list[WeatherItem]


class WorldWeatherOnlineSchema(BaseModel):
    data: Data
